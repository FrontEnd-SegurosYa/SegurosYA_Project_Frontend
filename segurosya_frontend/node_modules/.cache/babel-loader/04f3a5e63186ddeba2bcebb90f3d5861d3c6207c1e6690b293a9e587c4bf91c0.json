{"ast":null,"code":"//Importar variables\nimport { LINKSERVER } from '../../utiles/constantes.js';\nexport function obtenerDepartamentos() {\n  return fetch(LINKSERVER + \"/api/departamento/listar\").then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function obtenerDistritos() {\n  return fetch(LINKSERVER + \"/api/distrito/listar\").then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function buscarProvinciasDep(idDepartamento) {\n  return fetch(LINKSERVER + \"/api/provincia/buscarXDepartamento\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      idDepartamento: idDepartamento\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function buscarDistritosProv(idProvincia) {\n  return fetch(LINKSERVER + \"/api/distrito/buscarXProvincia\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      idProvincia: idProvincia\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function consultarDNI(dniBuscado) {\n  return fetch(LINKSERVER + \"/api/cliente/buscar\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      dni: dniBuscado\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function crearCliente(nombre, apellidoPaterno, apellidoMaterno, dni) {\n  return fetch(LINKSERVER + \"/api/cliente/crear\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      nombre: nombre,\n      apellidoPaterno: apellidoPaterno,\n      apellidoMaterno: apellidoMaterno,\n      dni: dni\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return parseInt(response.text());\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function crearContacto(idCliente, telefono, direccion) {\n  return fetch(LINKSERVER + \"/api/contacto/insertar\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      idCliente: idCliente,\n      telefono: telefono,\n      direccion: direccion\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return parseInt(response.text());\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function crearCuenta(idCliente, correo, contrasenha) {\n  return fetch(LINKSERVER + \"/api/cuenta/insertar\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      idCliente: idCliente,\n      correo: correo,\n      contrasenha: contrasenha\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return parseInt(response.text());\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function iniciarSesion(correo, contrasenha) {\n  return fetch(LINKSERVER + \"/api/cuenta/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      correo: correo,\n      contrasenha: contrasenha\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}","map":{"version":3,"names":["LINKSERVER","obtenerDepartamentos","fetch","then","response","ok","Error","json","catch","error","console","obtenerDistritos","buscarProvinciasDep","idDepartamento","method","headers","body","JSON","stringify","buscarDistritosProv","idProvincia","consultarDNI","dniBuscado","dni","crearCliente","nombre","apellidoPaterno","apellidoMaterno","parseInt","text","crearContacto","idCliente","telefono","direccion","crearCuenta","correo","contrasenha","iniciarSesion"],"sources":["D:/PUCP/Ing Soft/SegurosYA_Project_Frontend/segurosya_frontend/src/componentes/registrarCliente/funcionesExtras.js"],"sourcesContent":["//Importar variables\r\nimport { LINKSERVER } from '../../utiles/constantes.js';\r\n\r\nexport function obtenerDepartamentos() {\r\n    return fetch(LINKSERVER+\"/api/departamento/listar\")\r\n        .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function obtenerDistritos() {\r\n    return fetch(LINKSERVER+\"/api/distrito/listar\")\r\n        .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function buscarProvinciasDep(idDepartamento) {\r\n    return fetch(LINKSERVER+\"/api/provincia/buscarXDepartamento\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({idDepartamento: idDepartamento})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function buscarDistritosProv(idProvincia) {\r\n    return fetch(LINKSERVER+\"/api/distrito/buscarXProvincia\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({idProvincia: idProvincia})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function consultarDNI(dniBuscado) {\r\n    return fetch(LINKSERVER+\"/api/cliente/buscar\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({dni: dniBuscado})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function crearCliente(nombre,apellidoPaterno,apellidoMaterno,dni) {\r\n    return fetch(LINKSERVER+\"/api/cliente/crear\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({nombre: nombre, apellidoPaterno: apellidoPaterno, apellidoMaterno: apellidoMaterno, dni: dni})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return parseInt( response.text() );\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function crearContacto(idCliente,telefono,direccion) {\r\n    return fetch(LINKSERVER+\"/api/contacto/insertar\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({idCliente: idCliente, telefono: telefono, direccion: direccion})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return parseInt( response.text() );\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function crearCuenta(idCliente,correo,contrasenha) {\r\n    return fetch(LINKSERVER+\"/api/cuenta/insertar\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({idCliente: idCliente, correo: correo, contrasenha: contrasenha})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return parseInt( response.text() );\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function iniciarSesion(correo,contrasenha) {\r\n    return fetch(LINKSERVER+\"/api/cuenta/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({correo: correo, contrasenha: contrasenha})\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}