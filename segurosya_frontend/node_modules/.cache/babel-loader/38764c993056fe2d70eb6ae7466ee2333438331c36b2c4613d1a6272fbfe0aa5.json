{"ast":null,"code":"//Importar variables\nimport { LINKSERVER } from '../../utiles/constantes.js';\nexport function obtenerMarcas() {\n  return fetch(LINKSERVER + \"/api/marca/listar\").then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}\nexport function obtenerModelosXMarca(idMarca) {\n  return fetch(LINKSERVER + \"/api/modelo/listarMarca\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      idMarca: idMarca\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error:', error);\n    throw error;\n  });\n}","map":{"version":3,"names":["LINKSERVER","obtenerMarcas","fetch","then","response","ok","Error","json","catch","error","console","obtenerModelosXMarca","idMarca","method","headers","body","JSON","stringify"],"sources":["D:/PUCP/Ing Soft/SegurosYA_Project_Frontend/segurosya_frontend/src/componentes/datosCotizacion/funcionesFetch.js"],"sourcesContent":["//Importar variables\r\nimport { LINKSERVER } from '../../utiles/constantes.js';\r\n\r\nexport function obtenerMarcas() {\r\n    return fetch(LINKSERVER+\"/api/marca/listar\")\r\n        .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n            }\r\n        );\r\n}\r\n\r\nexport function obtenerModelosXMarca(idMarca) {\r\n    return fetch(LINKSERVER+\"/api/modelo/listarMarca\", {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({idMarca: idMarca})\r\n    })\r\n    .then(response => {\r\n    if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n    }\r\n        return response.json();\r\n    })\r\n    .catch(error => {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    );\r\n    }"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,4BAA4B;AAEvD,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC5B,OAAOC,KAAK,CAACF,UAAU,GAAC,mBAAmB,CAAC,CACvCG,IAAI,CAACC,QAAQ,IAAI;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACI,OAAOF,QAAQ,CAACG,IAAI,EAAE;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACX,CAAC,CACJ;AACT;AAEA,OAAO,SAASE,oBAAoBA,CAACC,OAAO,EAAE;EAC1C,OAAOV,KAAK,CAACF,UAAU,GAAC,yBAAyB,EAAE;IAC/Ca,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACL,OAAO,EAAEA;IAAO,CAAC;EAC3C,CAAC,CAAC,CACDT,IAAI,CAACC,QAAQ,IAAI;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACI,OAAOF,QAAQ,CAACG,IAAI,EAAE;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACRC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf,CAAC,CACJ;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}